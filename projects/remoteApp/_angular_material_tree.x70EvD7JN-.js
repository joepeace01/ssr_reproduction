import*as c from"@angular/cdk/tree";import{CdkTreeNode as l,CdkTreeNodeDef as f,CdkNestedTreeNode as p,CDK_TREE_NODE_OUTLET_NODE as _,CdkTreeNodePadding as g,CdkTreeNodeOutlet as E,CdkTree as v,CdkTreeNodeToggle as m,CdkTreeModule as M}from"@angular/cdk/tree";import*as e from"@angular/core";import{numberAttribute as h,booleanAttribute as T}from"@angular/core";import{MatCommonModule as x}from"@angular/material/core";import{DataSource as F}from"@angular/cdk/collections";import{BehaviorSubject as u,merge as C}from"rxjs";import{take as w,map as N}from"rxjs/operators";function A(t){return!!t._isNoopTreeKeyManager}var G=(()=>{class t extends l{get tabIndexInputBinding(){return this._tabIndexInputBinding}set tabIndexInputBinding(i){this._tabIndexInputBinding=i}_getTabindexAttribute(){return A(this._tree._keyManager)?this.tabIndexInputBinding:this._tabindex}get disabled(){return this.isDisabled}set disabled(i){this.isDisabled=i}constructor(i,n,r){super(i,n),this.defaultTabIndex=0,this.tabIndexInputBinding=Number(r)||this.defaultTabIndex}ngOnInit(){super.ngOnInit()}ngOnDestroy(){super.ngOnDestroy()}static{this.ɵfac=function(n){return new(n||t)(e.ɵɵdirectiveInject(e.ElementRef),e.ɵɵdirectiveInject(c.CdkTree),e.ɵɵinjectAttribute("tabindex"))}}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["mat-tree-node"]],hostAttrs:[1,"mat-tree-node"],hostVars:5,hostBindings:function(n,r){n&1&&e.ɵɵlistener("click",function(){return r._focusItem()}),n&2&&(e.ɵɵhostProperty("tabindex",r._getTabindexAttribute()),e.ɵɵattribute("aria-expanded",r._getAriaExpanded())("aria-level",r.level+1)("aria-posinset",r._getPositionInSet())("aria-setsize",r._getSetSize()))},inputs:{tabIndexInputBinding:[2,"tabIndex","tabIndexInputBinding",i=>i==null?0:h(i)],disabled:[2,"disabled","disabled",T]},outputs:{activation:"activation",expandedChange:"expandedChange"},exportAs:["matTreeNode"],standalone:!0,features:[e.ɵɵProvidersFeature([{provide:l,useExisting:t}]),e.ɵɵInputTransformsFeature,e.ɵɵInheritDefinitionFeature]})}}return t})(),J=(()=>{class t extends f{static{this.ɵfac=(()=>{let i;return function(r){return(i||(i=e.ɵɵgetInheritedFactory(t)))(r||t)}})()}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["","matTreeNodeDef",""]],inputs:{when:[0,"matTreeNodeDefWhen","when"],data:[0,"matTreeNode","data"]},standalone:!0,features:[e.ɵɵProvidersFeature([{provide:f,useExisting:t}]),e.ɵɵInheritDefinitionFeature]})}}return t})(),X=(()=>{class t extends p{get disabled(){return this.isDisabled}set disabled(i){this.isDisabled=i}get tabIndex(){return this.isDisabled?-1:this._tabIndex}set tabIndex(i){this._tabIndex=i}constructor(i,n,r,s){super(i,n,r)}ngOnInit(){super.ngOnInit()}ngAfterContentInit(){super.ngAfterContentInit()}ngOnDestroy(){super.ngOnDestroy()}static{this.ɵfac=function(n){return new(n||t)(e.ɵɵdirectiveInject(e.ElementRef),e.ɵɵdirectiveInject(c.CdkTree),e.ɵɵdirectiveInject(e.IterableDiffers),e.ɵɵinjectAttribute("tabindex"))}}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["mat-nested-tree-node"]],hostAttrs:[1,"mat-nested-tree-node"],inputs:{node:[0,"matNestedTreeNode","node"],disabled:[2,"disabled","disabled",T],tabIndex:[2,"tabIndex","tabIndex",i=>i==null?0:h(i)]},outputs:{activation:"activation",expandedChange:"expandedChange"},exportAs:["matNestedTreeNode"],standalone:!0,features:[e.ɵɵProvidersFeature([{provide:p,useExisting:t},{provide:l,useExisting:t},{provide:_,useExisting:t}]),e.ɵɵInputTransformsFeature,e.ɵɵInheritDefinitionFeature]})}}return t})(),Y=(()=>{class t extends g{get level(){return this._level}set level(i){this._setLevelInput(i)}get indent(){return this._indent}set indent(i){this._setIndentInput(i)}static{this.ɵfac=(()=>{let i;return function(r){return(i||(i=e.ɵɵgetInheritedFactory(t)))(r||t)}})()}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["","matTreeNodePadding",""]],inputs:{level:[2,"matTreeNodePadding","level",h],indent:[0,"matTreeNodePaddingIndent","indent"]},standalone:!0,features:[e.ɵɵProvidersFeature([{provide:g,useExisting:t}]),e.ɵɵInputTransformsFeature,e.ɵɵInheritDefinitionFeature]})}}return t})(),b=(()=>{class t{constructor(i,n){this.viewContainer=i,this._node=n}static{this.ɵfac=function(n){return new(n||t)(e.ɵɵdirectiveInject(e.ViewContainerRef),e.ɵɵdirectiveInject(_,8))}}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["","matTreeNodeOutlet",""]],standalone:!0,features:[e.ɵɵProvidersFeature([{provide:E,useExisting:t}])]})}}return t})(),Z=(()=>{class t extends v{constructor(){super(...arguments),this._nodeOutlet=void 0}static{this.ɵfac=(()=>{let i;return function(r){return(i||(i=e.ɵɵgetInheritedFactory(t)))(r||t)}})()}static{this.ɵcmp=e.ɵɵdefineComponent({type:t,selectors:[["mat-tree"]],viewQuery:function(n,r){if(n&1&&e.ɵɵviewQuery(b,7),n&2){let s;e.ɵɵqueryRefresh(s=e.ɵɵloadQuery())&&(r._nodeOutlet=s.first)}},hostAttrs:[1,"mat-tree"],exportAs:["matTree"],standalone:!0,features:[e.ɵɵProvidersFeature([{provide:v,useExisting:t}]),e.ɵɵInheritDefinitionFeature,e.ɵɵStandaloneFeature],decls:1,vars:0,consts:[["matTreeNodeOutlet",""]],template:function(n,r){n&1&&e.ɵɵelementContainer(0,0)},dependencies:[b],styles:[".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-app-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-app-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-app-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-app-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height)}.mat-nested-tree-node{border-bottom-width:0}"],encapsulation:2})}}return t})(),$=(()=>{class t extends m{static{this.ɵfac=(()=>{let i;return function(r){return(i||(i=e.ɵɵgetInheritedFactory(t)))(r||t)}})()}static{this.ɵdir=e.ɵɵdefineDirective({type:t,selectors:[["","matTreeNodeToggle",""]],inputs:{recursive:[0,"matTreeNodeToggleRecursive","recursive"]},standalone:!0,features:[e.ɵɵProvidersFeature([{provide:m,useExisting:t}]),e.ɵɵInheritDefinitionFeature]})}}return t})();var ee=(()=>{class t{static{this.ɵfac=function(n){return new(n||t)}}static{this.ɵmod=e.ɵɵdefineNgModule({type:t})}static{this.ɵinj=e.ɵɵdefineInjector({imports:[M,x,x]})}}return t})(),I=class{constructor(a,i,n,r){this.transformFunction=a,this.getLevel=i,this.isExpandable=n,this.getChildren=r}_flattenNode(a,i,n,r){let s=this.transformFunction(a,i);if(n.push(s),this.isExpandable(s)){let d=this.getChildren(a);d&&(Array.isArray(d)?this._flattenChildren(d,i,n,r):d.pipe(w(1)).subscribe(o=>{this._flattenChildren(o,i,n,r)}))}return n}_flattenChildren(a,i,n,r){a.forEach((s,d)=>{let o=r.slice();o.push(d!=a.length-1),this._flattenNode(s,i+1,n,o)})}flattenNodes(a){let i=[];return a.forEach(n=>this._flattenNode(n,0,i,[])),i}expandFlattenedNodes(a,i){let n=[],r=[];return r[0]=!0,a.forEach(s=>{let d=!0;for(let o=0;o<=this.getLevel(s);o++)d=d&&r[o];d&&n.push(s),this.isExpandable(s)&&(r[this.getLevel(s)+1]=i.isExpanded(s))}),n}},y=class extends F{get data(){return this._data.value}set data(a){this._data.next(a),this._flattenedData.next(this._treeFlattener.flattenNodes(this.data)),this._treeControl.dataNodes=this._flattenedData.value}constructor(a,i,n){super(),this._treeControl=a,this._treeFlattener=i,this._flattenedData=new u([]),this._expandedData=new u([]),this._data=new u([]),n&&(this.data=n)}connect(a){return C(a.viewChange,this._treeControl.expansionModel.changed,this._flattenedData).pipe(N(()=>(this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value,this._treeControl)),this._expandedData.value)))}disconnect(){}},D=class extends F{constructor(){super(...arguments),this._data=new u([])}get data(){return this._data.value}set data(a){this._data.next(a)}connect(a){return C(a.viewChange,this._data).pipe(N(()=>this.data))}disconnect(){}};export{X as MatNestedTreeNode,Z as MatTree,y as MatTreeFlatDataSource,I as MatTreeFlattener,ee as MatTreeModule,D as MatTreeNestedDataSource,G as MatTreeNode,J as MatTreeNodeDef,b as MatTreeNodeOutlet,Y as MatTreeNodePadding,$ as MatTreeNodeToggle};