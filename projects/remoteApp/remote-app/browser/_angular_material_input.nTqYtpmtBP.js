import{coerceBooleanProperty as d}from"@angular/cdk/coercion";import*as v from"@angular/cdk/platform";import{getSupportedInputTypes as p}from"@angular/cdk/platform";import*as y from"@angular/cdk/text-field";import{TextFieldModule as M}from"@angular/cdk/text-field";import*as t from"@angular/core";import{InjectionToken as k}from"@angular/core";import*as n from"@angular/forms";import{Validators as C}from"@angular/forms";import*as g from"@angular/material/core";import{_ErrorStateTracker as A,MatCommonModule as _}from"@angular/material/core";import"@angular/material/form-field";import{MAT_FORM_FIELD as T,MatFormFieldControl as B,MatFormFieldModule as f}from"@angular/material/form-field";import{MatError as ee,MatFormField as te,MatHint as ie,MatLabel as re,MatPrefix as se,MatSuffix as ne}from"@angular/material/form-field";import{Subject as N}from"rxjs";function G(s){return Error(`Input type "${s}" isn't supported by matInput.`)}var w=new k("MAT_INPUT_VALUE_ACCESSOR"),L=["button","checkbox","file","hidden","image","radio","range","reset","submit"],F=0,Y=(()=>{class s{get disabled(){return this._disabled}set disabled(e){this._disabled=d(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required??this.ngControl?.control?.hasValidator(C.required)??!1}set required(e){this._required=d(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&p().has(this._type)&&(this._elementRef.nativeElement.type=this._type),this._ensureWheelDefaultBehavior()}get errorStateMatcher(){return this._errorStateTracker.matcher}set errorStateMatcher(e){this._errorStateTracker.matcher=e}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=d(e)}get errorState(){return this._errorStateTracker.errorState}set errorState(e){this._errorStateTracker.errorState=e}constructor(e,r,i,o,I,b,E,S,u,m){this._elementRef=e,this._platform=r,this.ngControl=i,this._autofillMonitor=S,this._ngZone=u,this._formField=m,this._uid=`mat-input-${F++}`,this._webkitBlinkWheelListenerAttached=!1,this.focused=!1,this.stateChanges=new N,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(h=>p().has(h)),this._iOSKeyupListener=h=>{let a=h.target;!a.value&&a.selectionStart===0&&a.selectionEnd===0&&(a.setSelectionRange(1,1),a.setSelectionRange(0,0))},this._webkitBlinkWheelListener=()=>{};let l=this._elementRef.nativeElement,c=l.nodeName.toLowerCase();this._inputValueAccessor=E||l,this._previousNativeValue=this.value,this.id=this.id,r.IOS&&u.runOutsideAngular(()=>{e.nativeElement.addEventListener("keyup",this._iOSKeyupListener)}),this._errorStateTracker=new A(b,i,I,o,this.stateChanges),this._isServer=!this._platform.isBrowser,this._isNativeSelect=c==="select",this._isTextarea=c==="textarea",this._isInFormField=!!m,this._isNativeSelect&&(this.controlType=l.multiple?"mat-native-select-multiple":"mat-native-select")}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement),this._platform.IOS&&this._elementRef.nativeElement.removeEventListener("keyup",this._iOSKeyupListener),this._webkitBlinkWheelListenerAttached&&this._elementRef.nativeElement.removeEventListener("wheel",this._webkitBlinkWheelListener)}ngDoCheck(){this.ngControl&&(this.updateErrorState(),this.ngControl.disabled!==null&&this.ngControl.disabled!==this.disabled&&(this.disabled=this.ngControl.disabled,this.stateChanges.next())),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}updateErrorState(){this._errorStateTracker.updateErrorState()}_focusChanged(e){e!==this.focused&&(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckNativeValue(){let e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_dirtyCheckPlaceholder(){let e=this._getPlaceholder();if(e!==this._previousPlaceholder){let r=this._elementRef.nativeElement;this._previousPlaceholder=e,e?r.setAttribute("placeholder",e):r.removeAttribute("placeholder")}}_getPlaceholder(){return this.placeholder||null}_validateType(){L.indexOf(this._type)>-1}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!this._isNeverEmpty()&&!this._elementRef.nativeElement.value&&!this._isBadInput()&&!this.autofilled}get shouldLabelFloat(){if(this._isNativeSelect){let e=this._elementRef.nativeElement,r=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&r&&r.label)}else return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}_isInlineSelect(){let e=this._elementRef.nativeElement;return this._isNativeSelect&&(e.multiple||e.size>1)}_ensureWheelDefaultBehavior(){!this._webkitBlinkWheelListenerAttached&&this._type==="number"&&(this._platform.BLINK||this._platform.WEBKIT)&&(this._ngZone.runOutsideAngular(()=>{this._elementRef.nativeElement.addEventListener("wheel",this._webkitBlinkWheelListener)}),this._webkitBlinkWheelListenerAttached=!0),this._webkitBlinkWheelListenerAttached&&this._type!=="number"&&(this._elementRef.nativeElement.removeEventListener("wheel",this._webkitBlinkWheelListener),this._webkitBlinkWheelListenerAttached=!0)}static{this.ɵfac=function(r){return new(r||s)(t.ɵɵdirectiveInject(t.ElementRef),t.ɵɵdirectiveInject(v.Platform),t.ɵɵdirectiveInject(n.NgControl,10),t.ɵɵdirectiveInject(n.NgForm,8),t.ɵɵdirectiveInject(n.FormGroupDirective,8),t.ɵɵdirectiveInject(g.ErrorStateMatcher),t.ɵɵdirectiveInject(w,10),t.ɵɵdirectiveInject(y.AutofillMonitor),t.ɵɵdirectiveInject(t.NgZone),t.ɵɵdirectiveInject(T,8))}}static{this.ɵdir=t.ɵɵdefineDirective({type:s,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-mdc-input-element"],hostVars:18,hostBindings:function(r,i){r&1&&t.ɵɵlistener("focus",function(){return i._focusChanged(!0)})("blur",function(){return i._focusChanged(!1)})("input",function(){return i._onInput()}),r&2&&(t.ɵɵhostProperty("id",i.id)("disabled",i.disabled)("required",i.required),t.ɵɵattribute("name",i.name||null)("readonly",i.readonly&&!i._isNativeSelect||null)("aria-invalid",i.empty&&i.required?null:i.errorState)("aria-required",i.required)("id",i.id),t.ɵɵclassProp("mat-input-server",i._isServer)("mat-mdc-form-field-textarea-control",i._isInFormField&&i._isTextarea)("mat-mdc-form-field-input-control",i._isInFormField)("mdc-text-field__input",i._isInFormField)("mat-mdc-native-select-inline",i._isInlineSelect()))},inputs:{disabled:"disabled",id:"id",placeholder:"placeholder",name:"name",required:"required",type:"type",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:[0,"aria-describedby","userAriaDescribedBy"],value:"value",readonly:"readonly"},exportAs:["matInput"],standalone:!0,features:[t.ɵɵProvidersFeature([{provide:B,useExisting:s}]),t.ɵɵNgOnChangesFeature]})}}return s})(),J=(()=>{class s{static{this.ɵfac=function(r){return new(r||s)}}static{this.ɵmod=t.ɵɵdefineNgModule({type:s})}static{this.ɵinj=t.ɵɵdefineInjector({imports:[_,f,f,M,_]})}}return s})();export{w as MAT_INPUT_VALUE_ACCESSOR,ee as MatError,te as MatFormField,ie as MatHint,Y as MatInput,J as MatInputModule,re as MatLabel,se as MatPrefix,ne as MatSuffix,G as getMatInputUnsupportedTypeError};