import{coerceElement as a,coerceNumberProperty as h}from"@angular/cdk/coercion";import*as n from"@angular/core";import{inject as l,NgZone as v,EventEmitter as f,booleanAttribute as m}from"@angular/core";import{Observable as p,Subject as _}from"rxjs";import{map as g,filter as E,debounceTime as y}from"rxjs/operators";function O(t){if(t.type==="characterData"&&t.target instanceof Comment)return!0;if(t.type==="childList"){for(let r=0;r<t.addedNodes.length;r++)if(!(t.addedNodes[r]instanceof Comment))return!1;for(let r=0;r<t.removedNodes.length;r++)if(!(t.removedNodes[r]instanceof Comment))return!1;return!0}return!1}var u=(()=>{class t{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}static{this.ɵfac=function(s){return new(s||t)}}static{this.ɵprov=n.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"})}}return t})(),D=(()=>{class t{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map,this._ngZone=l(v)}ngOnDestroy(){this._observedElements.forEach((e,s)=>this._cleanupObserver(s))}observe(e){let s=a(e);return new p(i=>{let d=this._observeElement(s).pipe(g(o=>o.filter(b=>!O(b))),E(o=>!!o.length)).subscribe(o=>{this._ngZone.run(()=>{i.next(o)})});return()=>{d.unsubscribe(),this._unobserveElement(s)}})}_observeElement(e){return this._ngZone.runOutsideAngular(()=>{if(this._observedElements.has(e))this._observedElements.get(e).count++;else{let s=new _,i=this._mutationObserverFactory.create(c=>s.next(c));i&&i.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:i,stream:s,count:1})}return this._observedElements.get(e).stream})}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){let{observer:s,stream:i}=this._observedElements.get(e);s&&s.disconnect(),i.complete(),this._observedElements.delete(e)}}static{this.ɵfac=function(s){return new(s||t)(n.ɵɵinject(u))}}static{this.ɵprov=n.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"})}}return t})(),x=(()=>{class t{get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=h(e),this._subscribe()}constructor(e,s){this._contentObserver=e,this._elementRef=s,this.event=new f,this._disabled=!1,this._currentSubscription=null}ngAfterContentInit(){!this._currentSubscription&&!this.disabled&&this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();let e=this._contentObserver.observe(this._elementRef);this._currentSubscription=(this.debounce?e.pipe(y(this.debounce)):e).subscribe(this.event)}_unsubscribe(){this._currentSubscription?.unsubscribe()}static{this.ɵfac=function(s){return new(s||t)(n.ɵɵdirectiveInject(D),n.ɵɵdirectiveInject(n.ElementRef))}}static{this.ɵdir=n.ɵɵdefineDirective({type:t,selectors:[["","cdkObserveContent",""]],inputs:{disabled:[2,"cdkObserveContentDisabled","disabled",m],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"],standalone:!0,features:[n.ɵɵInputTransformsFeature]})}}return t})(),A=(()=>{class t{static{this.ɵfac=function(s){return new(s||t)}}static{this.ɵmod=n.ɵɵdefineNgModule({type:t})}static{this.ɵinj=n.ɵɵdefineInjector({providers:[u]})}}return t})();export{x as CdkObserveContent,D as ContentObserver,u as MutationObserverFactory,A as ObserversModule};