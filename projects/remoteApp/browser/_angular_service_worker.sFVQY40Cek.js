var F=Object.defineProperty;var m=Object.getOwnPropertySymbols;var U=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var T=(t,r,e)=>r in t?F(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,O=(t,r)=>{for(var e in r||={})U.call(r,e)&&T(t,e,r[e]);if(m)for(var e of m(r))_.call(r,e)&&T(t,e,r[e]);return t};import*as o from"@angular/core";import{InjectionToken as W,NgZone as j,ApplicationRef as I,makeEnvironmentProviders as L,PLATFORM_ID as S,APP_INITIALIZER as V,Injector as B}from"@angular/core";import{isPlatformBrowser as A}from"@angular/common";import{defer as N,throwError as K,fromEvent as C,of as y,concat as x,Subject as Z,NEVER as f,merge as k,from as $}from"rxjs";import{map as u,filter as w,switchMap as b,publish as G,take as h,tap as H,delay as q}from"rxjs/operators";var v="Service workers are disabled or not supported by this browser";function z(t){return N(()=>K(new Error(t)))}var d=class{constructor(r){if(this.serviceWorker=r,!r)this.worker=this.events=this.registration=z(v);else{let n=C(r,"controllerchange").pipe(u(()=>r.controller)),s=N(()=>y(r.controller)),a=x(s,n);this.worker=a.pipe(w(l=>!!l)),this.registration=this.worker.pipe(b(()=>r.getRegistration()));let g=C(r,"message").pipe(u(l=>l.data)).pipe(w(l=>l&&l.type)).pipe(G());g.connect(),this.events=g}}postMessage(r,e){return this.worker.pipe(h(1),H(n=>{n.postMessage(O({action:r},e))})).toPromise().then(()=>{})}postMessageWithOperation(r,e,n){let s=this.waitForOperationCompleted(n),a=this.postMessage(r,e);return Promise.all([a,s]).then(([,i])=>i)}generateNonce(){return Math.round(Math.random()*1e7)}eventsOfType(r){let e;return typeof r=="string"?e=n=>n.type===r:e=n=>r.includes(n.type),this.events.pipe(w(e))}nextEventOfType(r){return this.eventsOfType(r).pipe(h(1))}waitForOperationCompleted(r){return this.eventsOfType("OPERATION_COMPLETED").pipe(w(e=>e.nonce===r),h(1),u(e=>{if(e.result!==void 0)return e.result;throw new Error(e.error)})).toPromise()}get isEnabled(){return!!this.serviceWorker}},R=(()=>{class t{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,this.pushManager=null,this.subscriptionChanges=new Z,!e.isEnabled){this.messages=f,this.notificationClicks=f,this.subscription=f;return}this.messages=this.sw.eventsOfType("PUSH").pipe(u(s=>s.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(u(s=>s.data)),this.pushManager=this.sw.registration.pipe(u(s=>s.pushManager));let n=this.pushManager.pipe(b(s=>s.getSubscription()));this.subscription=k(n,this.subscriptionChanges)}requestSubscription(e){if(!this.sw.isEnabled||this.pushManager===null)return Promise.reject(new Error(v));let n={userVisibleOnly:!0},s=this.decodeBase64(e.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),a=new Uint8Array(new ArrayBuffer(s.length));for(let i=0;i<s.length;i++)a[i]=s.charCodeAt(i);return n.applicationServerKey=a,this.pushManager.pipe(b(i=>i.subscribe(n)),h(1)).toPromise().then(i=>(this.subscriptionChanges.next(i),i))}unsubscribe(){if(!this.sw.isEnabled)return Promise.reject(new Error(v));let e=n=>{if(n===null)throw new Error("Not subscribed to push notifications.");return n.unsubscribe().then(s=>{if(!s)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})};return this.subscription.pipe(h(1),b(e)).toPromise()}decodeBase64(e){return atob(e)}static{this.ɵfac=function(n){return new(n||t)(o.ɵɵinject(d))}}static{this.ɵprov=o.ɵɵdefineInjectable({token:t,factory:t.ɵfac})}}return t})(),D=(()=>{class t{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,!e.isEnabled){this.versionUpdates=f,this.unrecoverable=f;return}this.versionUpdates=this.sw.eventsOfType(["VERSION_DETECTED","VERSION_INSTALLATION_FAILED","VERSION_READY","NO_NEW_VERSION_DETECTED"]),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(v));let e=this.sw.generateNonce();return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES",{nonce:e},e)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(v));let e=this.sw.generateNonce();return this.sw.postMessageWithOperation("ACTIVATE_UPDATE",{nonce:e},e)}static{this.ɵfac=function(n){return new(n||t)(o.ɵɵinject(d))}}static{this.ɵprov=o.ɵɵdefineInjectable({token:t,factory:t.ɵfac})}}return t})();var M=new W("");function Y(t,r,e,n){return()=>{if(!(A(n)&&"serviceWorker"in navigator&&e.enabled!==!1))return;let s=t.get(j),a=t.get(I);s.runOutsideAngular(()=>{let c=navigator.serviceWorker,p=()=>c.controller?.postMessage({action:"INITIALIZE"});c.addEventListener("controllerchange",p),a.onDestroy(()=>{c.removeEventListener("controllerchange",p)})});let i;if(typeof e.registrationStrategy=="function")i=e.registrationStrategy();else{let[c,...p]=(e.registrationStrategy||"registerWhenStable:30000").split(":");switch(c){case"registerImmediately":i=y(null);break;case"registerWithDelay":i=P(+p[0]||0);break;case"registerWhenStable":let g=$(t.get(I).whenStable());i=p[0]?k(g,P(+p[0])):g;break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)}}s.runOutsideAngular(()=>i.pipe(h(1)).subscribe(()=>navigator.serviceWorker.register(r,{scope:e.scope}).catch(c=>console.error("Service worker registration failed with:",c))))}}function P(t){return y(null).pipe(q(t))}function J(t,r){return new d(A(r)&&t.enabled!==!1?navigator.serviceWorker:void 0)}var E=class{};function Q(t,r={}){return L([R,D,{provide:M,useValue:t},{provide:E,useValue:r},{provide:d,useFactory:J,deps:[E,S]},{provide:V,useFactory:Y,deps:[B,M,E,S],multi:!0}])}var oe=(()=>{class t{static register(e,n={}){return{ngModule:t,providers:[Q(e,n)]}}static{this.ɵfac=function(n){return new(n||t)}}static{this.ɵmod=o.ɵɵdefineNgModule({type:t})}static{this.ɵinj=o.ɵɵdefineInjector({providers:[R,D]})}}return t})();export{oe as ServiceWorkerModule,R as SwPush,E as SwRegistrationOptions,D as SwUpdate,Q as provideServiceWorker};/*! Bundled license information:

@angular/service-worker/fesm2022/service-worker.mjs:
  (**
   * @license Angular v18.2.13
   * (c) 2010-2024 Google LLC. https://angular.io/
   * License: MIT
   *)
  (*!
   * @license
   * Copyright Google LLC All Rights Reserved.
   *
   * Use of this source code is governed by an MIT-style license that can be
   * found in the LICENSE file at https://angular.dev/license
   *)
*/